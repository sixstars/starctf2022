// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Render should disable access key id field 1`] = `
<Fragment>
  <ConnectionConfig
    onOptionsChange={[MockFunction]}
    options={
      Object {
        "access": "proxy",
        "basicAuth": false,
        "basicAuthPassword": "",
        "basicAuthUser": "",
        "database": "",
        "id": 1,
        "isDefault": true,
        "jsonData": Object {
          "assumeRoleArn": "",
          "authType": "keys",
          "customMetricsNamespaces": "",
          "database": "",
          "defaultRegion": "us-east-2",
          "externalId": "",
          "timeField": "@timestamp",
        },
        "name": "CloudWatch",
        "orgId": 1,
        "password": "",
        "readOnly": false,
        "secureJsonData": Object {
          "accessKey": "",
          "secretKey": "",
        },
        "secureJsonFields": Object {
          "accessKey": false,
          "secretKey": false,
        },
        "type": "cloudwatch",
        "typeLogoUrl": "",
        "typeName": "Cloudwatch",
        "uid": "z",
        "url": "",
        "user": "",
        "withCredentials": false,
      }
    }
    secureJsonFields={
      Object {
        "secretKey": true,
      }
    }
  >
    <InlineField
      label="Namespaces of Custom Metrics"
      labelWidth={28}
      tooltip="Namespaces of Custom Metrics."
    >
      <Input
        onChange={[Function]}
        placeholder="Namespace1,Namespace2"
        value=""
        width={60}
      />
    </InlineField>
  </ConnectionConfig>
  <XrayLinkConfig
    onChange={[Function]}
  />
</Fragment>
`;

exports[`Render should render component 1`] = `
<Fragment>
  <ConnectionConfig
    onOptionsChange={[MockFunction]}
    options={
      Object {
        "access": "proxy",
        "basicAuth": false,
        "basicAuthPassword": "",
        "basicAuthUser": "",
        "database": "",
        "id": 1,
        "isDefault": true,
        "jsonData": Object {
          "assumeRoleArn": "",
          "authType": "keys",
          "customMetricsNamespaces": "",
          "database": "",
          "defaultRegion": "us-east-2",
          "externalId": "",
          "timeField": "@timestamp",
        },
        "name": "CloudWatch",
        "orgId": 1,
        "password": "",
        "readOnly": false,
        "secureJsonData": Object {
          "accessKey": "",
          "secretKey": "",
        },
        "secureJsonFields": Object {
          "accessKey": false,
          "secretKey": false,
        },
        "type": "cloudwatch",
        "typeLogoUrl": "",
        "typeName": "Cloudwatch",
        "uid": "z",
        "url": "",
        "user": "",
        "withCredentials": false,
      }
    }
  >
    <InlineField
      label="Namespaces of Custom Metrics"
      labelWidth={28}
      tooltip="Namespaces of Custom Metrics."
    >
      <Input
        onChange={[Function]}
        placeholder="Namespace1,Namespace2"
        value=""
        width={60}
      />
    </InlineField>
  </ConnectionConfig>
  <XrayLinkConfig
    onChange={[Function]}
  />
</Fragment>
`;

exports[`Render should show access key and secret access key fields 1`] = `
<Fragment>
  <ConnectionConfig
    jsonData={
      Object {
        "authType": "keys",
      }
    }
    onOptionsChange={[MockFunction]}
    options={
      Object {
        "access": "proxy",
        "basicAuth": false,
        "basicAuthPassword": "",
        "basicAuthUser": "",
        "database": "",
        "id": 1,
        "isDefault": true,
        "jsonData": Object {
          "assumeRoleArn": "",
          "authType": "keys",
          "customMetricsNamespaces": "",
          "database": "",
          "defaultRegion": "us-east-2",
          "externalId": "",
          "timeField": "@timestamp",
        },
        "name": "CloudWatch",
        "orgId": 1,
        "password": "",
        "readOnly": false,
        "secureJsonData": Object {
          "accessKey": "",
          "secretKey": "",
        },
        "secureJsonFields": Object {
          "accessKey": false,
          "secretKey": false,
        },
        "type": "cloudwatch",
        "typeLogoUrl": "",
        "typeName": "Cloudwatch",
        "uid": "z",
        "url": "",
        "user": "",
        "withCredentials": false,
      }
    }
  >
    <InlineField
      label="Namespaces of Custom Metrics"
      labelWidth={28}
      tooltip="Namespaces of Custom Metrics."
    >
      <Input
        onChange={[Function]}
        placeholder="Namespace1,Namespace2"
        value=""
        width={60}
      />
    </InlineField>
  </ConnectionConfig>
  <XrayLinkConfig
    onChange={[Function]}
  />
</Fragment>
`;

exports[`Render should show arn role field 1`] = `
<Fragment>
  <ConnectionConfig
    jsonData={
      Object {
        "authType": "arn",
      }
    }
    onOptionsChange={[MockFunction]}
    options={
      Object {
        "access": "proxy",
        "basicAuth": false,
        "basicAuthPassword": "",
        "basicAuthUser": "",
        "database": "",
        "id": 1,
        "isDefault": true,
        "jsonData": Object {
          "assumeRoleArn": "",
          "authType": "keys",
          "customMetricsNamespaces": "",
          "database": "",
          "defaultRegion": "us-east-2",
          "externalId": "",
          "timeField": "@timestamp",
        },
        "name": "CloudWatch",
        "orgId": 1,
        "password": "",
        "readOnly": false,
        "secureJsonData": Object {
          "accessKey": "",
          "secretKey": "",
        },
        "secureJsonFields": Object {
          "accessKey": false,
          "secretKey": false,
        },
        "type": "cloudwatch",
        "typeLogoUrl": "",
        "typeName": "Cloudwatch",
        "uid": "z",
        "url": "",
        "user": "",
        "withCredentials": false,
      }
    }
  >
    <InlineField
      label="Namespaces of Custom Metrics"
      labelWidth={28}
      tooltip="Namespaces of Custom Metrics."
    >
      <Input
        onChange={[Function]}
        placeholder="Namespace1,Namespace2"
        value=""
        width={60}
      />
    </InlineField>
  </ConnectionConfig>
  <XrayLinkConfig
    onChange={[Function]}
  />
</Fragment>
`;

exports[`Render should show credentials profile name field 1`] = `
<Fragment>
  <ConnectionConfig
    jsonData={
      Object {
        "authType": "credentials",
      }
    }
    onOptionsChange={[MockFunction]}
    options={
      Object {
        "access": "proxy",
        "basicAuth": false,
        "basicAuthPassword": "",
        "basicAuthUser": "",
        "database": "",
        "id": 1,
        "isDefault": true,
        "jsonData": Object {
          "assumeRoleArn": "",
          "authType": "keys",
          "customMetricsNamespaces": "",
          "database": "",
          "defaultRegion": "us-east-2",
          "externalId": "",
          "timeField": "@timestamp",
        },
        "name": "CloudWatch",
        "orgId": 1,
        "password": "",
        "readOnly": false,
        "secureJsonData": Object {
          "accessKey": "",
          "secretKey": "",
        },
        "secureJsonFields": Object {
          "accessKey": false,
          "secretKey": false,
        },
        "type": "cloudwatch",
        "typeLogoUrl": "",
        "typeName": "Cloudwatch",
        "uid": "z",
        "url": "",
        "user": "",
        "withCredentials": false,
      }
    }
  >
    <InlineField
      label="Namespaces of Custom Metrics"
      labelWidth={28}
      tooltip="Namespaces of Custom Metrics."
    >
      <Input
        onChange={[Function]}
        placeholder="Namespace1,Namespace2"
        value=""
        width={60}
      />
    </InlineField>
  </ConnectionConfig>
  <XrayLinkConfig
    onChange={[Function]}
  />
</Fragment>
`;
