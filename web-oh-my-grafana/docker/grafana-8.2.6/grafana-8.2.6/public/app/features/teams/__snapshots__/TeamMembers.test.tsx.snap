// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Render should render component 1`] = `
<div>
  <div
    className="page-action-bar"
  >
    <div
      className="gf-form gf-form--grow"
    >
      <FilterInput
        onChange={[Function]}
        placeholder="Search members"
        value=""
      />
    </div>
    <Button
      className="pull-right"
      disabled={false}
      onClick={[Function]}
    >
      Add member
    </Button>
  </div>
  <SlideDown
    in={false}
  >
    <div
      className="cta-form"
    >
      <CloseButton
        aria-label="Close 'Add team member' dialogue"
        onClick={[Function]}
      />
      <Label
        htmlFor="user-picker"
      >
        Add team member
      </Label>
      <div
        className="gf-form-inline"
      >
        <UserPicker
          className="min-width-30"
          inputId="user-picker"
          onSelected={[Function]}
        />
      </div>
    </div>
  </SlideDown>
  <div
    className="admin-list-table"
  >
    <table
      className="filter-table filter-table--hover form-inline"
    >
      <thead>
        <tr>
          <th />
          <th>
            Login
          </th>
          <th>
            Email
          </th>
          <th>
            Name
          </th>
          <WithFeatureToggle
            featureToggle={false}
          >
            <th>
              Permission
            </th>
          </WithFeatureToggle>
          <th
            style={
              Object {
                "width": "1%",
              }
            }
          />
        </tr>
      </thead>
      <tbody />
    </table>
  </div>
</div>
`;

exports[`Render should render team members 1`] = `
<div>
  <div
    className="page-action-bar"
  >
    <div
      className="gf-form gf-form--grow"
    >
      <FilterInput
        onChange={[Function]}
        placeholder="Search members"
        value=""
      />
    </div>
    <Button
      className="pull-right"
      disabled={false}
      onClick={[Function]}
    >
      Add member
    </Button>
  </div>
  <SlideDown
    in={false}
  >
    <div
      className="cta-form"
    >
      <CloseButton
        aria-label="Close 'Add team member' dialogue"
        onClick={[Function]}
      />
      <Label
        htmlFor="user-picker"
      >
        Add team member
      </Label>
      <div
        className="gf-form-inline"
      >
        <UserPicker
          className="min-width-30"
          inputId="user-picker"
          onSelected={[Function]}
        />
      </div>
    </div>
  </SlideDown>
  <div
    className="admin-list-table"
  >
    <table
      className="filter-table filter-table--hover form-inline"
    >
      <thead>
        <tr>
          <th />
          <th>
            Login
          </th>
          <th>
            Email
          </th>
          <th>
            Name
          </th>
          <WithFeatureToggle
            featureToggle={false}
          >
            <th>
              Permission
            </th>
          </WithFeatureToggle>
          <th
            style={
              Object {
                "width": "1%",
              }
            }
          />
        </tr>
      </thead>
      <tbody>
        <Connect(TeamMemberRow)
          editorsCanAdmin={false}
          key="1"
          member={
            Object {
              "avatarUrl": "some/url/",
              "email": "test@test.com",
              "labels": Array [
                "label 1",
                "label 2",
              ],
              "login": "testUser-1",
              "name": "testName",
              "permission": 0,
              "teamId": 1,
              "userId": 1,
            }
          }
          signedInUserIsTeamAdmin={true}
          syncEnabled={false}
        />
        <Connect(TeamMemberRow)
          editorsCanAdmin={false}
          key="2"
          member={
            Object {
              "avatarUrl": "some/url/",
              "email": "test@test.com",
              "labels": Array [
                "label 1",
                "label 2",
              ],
              "login": "testUser-2",
              "name": "testName",
              "permission": 0,
              "teamId": 1,
              "userId": 2,
            }
          }
          signedInUserIsTeamAdmin={true}
          syncEnabled={false}
        />
        <Connect(TeamMemberRow)
          editorsCanAdmin={false}
          key="3"
          member={
            Object {
              "avatarUrl": "some/url/",
              "email": "test@test.com",
              "labels": Array [
                "label 1",
                "label 2",
              ],
              "login": "testUser-3",
              "name": "testName",
              "permission": 0,
              "teamId": 1,
              "userId": 3,
            }
          }
          signedInUserIsTeamAdmin={true}
          syncEnabled={false}
        />
        <Connect(TeamMemberRow)
          editorsCanAdmin={false}
          key="4"
          member={
            Object {
              "avatarUrl": "some/url/",
              "email": "test@test.com",
              "labels": Array [
                "label 1",
                "label 2",
              ],
              "login": "testUser-4",
              "name": "testName",
              "permission": 0,
              "teamId": 1,
              "userId": 4,
            }
          }
          signedInUserIsTeamAdmin={true}
          syncEnabled={false}
        />
        <Connect(TeamMemberRow)
          editorsCanAdmin={false}
          key="5"
          member={
            Object {
              "avatarUrl": "some/url/",
              "email": "test@test.com",
              "labels": Array [
                "label 1",
                "label 2",
              ],
              "login": "testUser-5",
              "name": "testName",
              "permission": 4,
              "teamId": 1,
              "userId": 5,
            }
          }
          signedInUserIsTeamAdmin={true}
          syncEnabled={false}
        />
      </tbody>
    </table>
  </div>
</div>
`;
